package com.zoubworld.java.utils.html.graph;

import java.io.File;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.zoubworld.Crypto.Wallet.Price;
import com.zoubworld.bourse.simulator.Stock;
import com.zoubworld.utils.JavaUtils;

public class BuildApage {

	public BuildApage() {
		// TODO Auto-generated constructor stub
	}
	boolean bnormalized=true;
	Date datestart=new Date(2024-1900,4-3,20);//null;
	

	public String curveToDataJs(List<Stock> ls)
	{
		StringBuilder t=new StringBuilder ();
		 t.append( "function getData() {\r\n"
				+ "  return [\r\n");
		
				
		/*
		if (bnormalized)
			ref=s.getPrices(s.getLastDate()).getAverage();
		if (s.getFirstDate().before(b))
			b=s.getFirstDate();
		if (s.getLastDate().after(e))
			e=s.getLastDate();*/
		Set<Date> ds=new HashSet<Date>();
		for(Stock s:ls)
			ds.addAll(s.getDates());
		
		List<Date> dl = JavaUtils.asSortedSet(ds);
		for(Date d:ds)
			if(datestart.after(d))
			dl.remove(d);
				for(Date d:dl)
				{
				//	Date d=m.getKey();
					
					
					t.append(  "    {\r\n"
				+ "      year: new Date("+(d.getYear()+1900)+", "+(d.getMonth()+0)+", "+d.getDate()+"),\r\n")
				;
				for(Stock s:ls)
				{
					Price p=s.getPrices(d);
					if(p!=null)
					{				double ref=1.0;
				if (bnormalized)
					ref=s.getPrices(s.getLastDate()).getAverage();
				t.append(  "      \""+s.getSymbol()+"\": "+p.getAverage()/ref+",\r\n");
					}		
				}
				/*+ "      \"Open\": "+p.getOpen()/ref+",\r\n"
				+ "      \"High\": "+p.getHigh()/ref+",\r\n"
				+ "      \"Low\": "+p.getLow()/ref+",\r\n"
				+ "      \"Close\": "+p.getClose()/ref+",\r\n"
				+ "      \"Adj Close\": "+p.getAdjClose()/ref+",\r\n"
				+ "      \"Volume\": "+p.getVolume()/ref+",\r\n"*/
				t.append(  "    },\r\n"	);
				}
				
				t.append( "  ];\r\n"
				+ "}");
				
	return t.toString();
	}
	public String curveToDataJs(Stock s)
	{
		String t= "function getData() {\r\n"
				+ "  return [\r\n";
		double ref=1.0;
		if (bnormalized)
			ref=s.getPrices(s.getLastDate()).getAverage();
				for(Entry<Date, Price> m:s.getData().entrySet())
				{
					Date d=m.getKey();
					Price p=m.getValue();
					
				t+= "    {\r\n"
				+ "      year: new Date("+(d.getYear()+1900)+", "+(d.getMonth()+0)+", "+d.getDate()+"),\r\n"
				+ "      \"Open\": "+p.getOpen()/ref+",\r\n"
				+ "      \"High\": "+p.getHigh()/ref+",\r\n"
				+ "      \"Low\": "+p.getLow()/ref+",\r\n"
				+ "      \"Close\": "+p.getClose()/ref+",\r\n"
				+ "      \"Adj Close\": "+p.getAdjClose()/ref+",\r\n"
				+ "      \"Volume\": "+p.getVolume()/ref+",\r\n"
				+ "    },\r\n"	;
				}
				
				t+="  ];\r\n"
				+ "}";
				
	return t;
	}
	public String ToDataJs()
	{ return "function getData() {\r\n"
			+ "  return [\r\n"
			+ "    { month: \"Jul\", men: 79011, women: 3808, menDelta: 149, womenDelta: 62 },\r\n"
			+ "    { month: \"Aug\", men: 79166, women: 3841, menDelta: 155, womenDelta: 33 },\r\n"
			+ "    { month: \"Sep\", men: 79514, women: 3813, menDelta: 348, womenDelta: 28 },\r\n"
			+ "    { month: \"Oct\", men: 79945, women: 3856, menDelta: 411, womenDelta: 43 },\r\n"
			+ "    { month: \"Nov\", men: 79869, women: 3796, menDelta: -76, womenDelta: -60 },\r\n"
			+ "    { month: \"Dec\", men: 79701, women: 3783, menDelta: -168, womenDelta: -26 },\r\n"
			+ "  ];\r\n"
			+ "}\r\n"
			+ "";
	}
	
	public String ToDataJs(List<Stock> ls)
	{
		List<Float> bins=new ArrayList<Float>();
		float min=Float.MAX_VALUE;
		float max=Float.MIN_VALUE;
		for(Stock s:ls)	
		{
			float ref=(float) 1.0;
		if (bnormalized)
			ref=s.getPrices(s.getLastDate()).getAverage();
		for(Price p:s.get(datestart==null?s.getFirstDate():datestart, s.getLastDate()))
		{
			if (min>p.getLow()/ref)
			min=p.getLow()/ref;
			if (max<p.getLow()/ref)
				max=p.getLow()/ref;
					
		}
		}
		int nbstep=20;
		float fstep=(max-min)/nbstep;
		for(int i=0;i<nbstep;i++)
			bins.add(min+fstep*i);
		
		String t= "function getData() {\r\n"
			+ "  return [\r\n";
		
		Map<Stock,Map<Float,Float>> histo=new HashMap<Stock,Map<Float,Float>> ();
		
		for(Stock s:ls)
			histo.put(s,s.getHistoMap(s.getFirstDate(),s.getLastDate(),bins));
			
		for(Float b:bins)
		{
			t+= "    { bin: \""+b+"\", ";
			for(Stock s:ls)
			t+= s.getSymbol().replaceAll("-", "_")+": "+histo.get(s).get(b)+",";
			t+= " },\r\n";
		}
			/*+ "    { bin: \"1\", men: 79166, women: 3841, menDelta: 155, womenDelta: 33 },\r\n"
			+ "    { bin: \"2\", men: 79514, women: 3813, menDelta: 348, womenDelta: 28 },\r\n"
			+ "    { bin: \"3\", men: 79945, women: 3856, menDelta: 411, womenDelta: 43 },\r\n"
			+ "    { bin: \"4\", men: 79869, women: 3796, menDelta: -76, womenDelta: -60 },\r\n"
			+ "    { bin: \"5\", men: 79701, women: 3783, menDelta: -168, womenDelta: -26 },\r\n"
			*/
		t+= "  ];\r\n"
			+ "}\r\n"
			+ "";
	return t;
	}
	public String curveToDataJs()
	{ return "function getData() {\r\n"
			+ "  return [\r\n"
			+ "    {\r\n"
			+ "      year: new Date(1990, 0, 1),\r\n"
			+ "      \"Onshore wind\": 1,\r\n"
			+ "      \"Offshore wind\": 0,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 0,\r\n"
			+ "      \"Small scale Hydro\": 11,\r\n"
			+ "      \"Large scale Hydro\": 437,\r\n"
			+ "      \"Plant biomass\": 0,\r\n"
			+ "      \"Animal biomass\": 0,\r\n"
			+ "      \"Landfill gas\": 46,\r\n"
			+ "      \"Sewage gas\": 104,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(1991, 0, 1),\r\n"
			+ "      \"Onshore wind\": 1,\r\n"
			+ "      \"Offshore wind\": 0,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 0,\r\n"
			+ "      \"Small scale Hydro\": 12,\r\n"
			+ "      \"Large scale Hydro\": 385,\r\n"
			+ "      \"Plant biomass\": 0,\r\n"
			+ "      \"Animal biomass\": 0,\r\n"
			+ "      \"Landfill gas\": 68,\r\n"
			+ "      \"Sewage gas\": 108,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(1992, 0, 1),\r\n"
			+ "      \"Onshore wind\": 3,\r\n"
			+ "      \"Offshore wind\": 0,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 0,\r\n"
			+ "      \"Small scale Hydro\": 13,\r\n"
			+ "      \"Large scale Hydro\": 454,\r\n"
			+ "      \"Plant biomass\": 0,\r\n"
			+ "      \"Animal biomass\": 17,\r\n"
			+ "      \"Landfill gas\": 124,\r\n"
			+ "      \"Sewage gas\": 108,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(1993, 0, 1),\r\n"
			+ "      \"Onshore wind\": 19,\r\n"
			+ "      \"Offshore wind\": 0,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 0,\r\n"
			+ "      \"Small scale Hydro\": 14,\r\n"
			+ "      \"Large scale Hydro\": 356,\r\n"
			+ "      \"Plant biomass\": 0,\r\n"
			+ "      \"Animal biomass\": 52,\r\n"
			+ "      \"Landfill gas\": 147,\r\n"
			+ "      \"Sewage gas\": 124,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(1994, 0, 1),\r\n"
			+ "      \"Onshore wind\": 30,\r\n"
			+ "      \"Offshore wind\": 0,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 0,\r\n"
			+ "      \"Small scale Hydro\": 14,\r\n"
			+ "      \"Large scale Hydro\": 424,\r\n"
			+ "      \"Plant biomass\": 0,\r\n"
			+ "      \"Animal biomass\": 71,\r\n"
			+ "      \"Landfill gas\": 170,\r\n"
			+ "      \"Sewage gas\": 118,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(1995, 0, 1),\r\n"
			+ "      \"Onshore wind\": 34,\r\n"
			+ "      \"Offshore wind\": 0,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 0,\r\n"
			+ "      \"Small scale Hydro\": 14,\r\n"
			+ "      \"Large scale Hydro\": 402,\r\n"
			+ "      \"Plant biomass\": 0,\r\n"
			+ "      \"Animal biomass\": 71,\r\n"
			+ "      \"Landfill gas\": 184,\r\n"
			+ "      \"Sewage gas\": 135,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(1996, 0, 1),\r\n"
			+ "      \"Onshore wind\": 42,\r\n"
			+ "      \"Offshore wind\": 0,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 0,\r\n"
			+ "      \"Small scale Hydro\": 10,\r\n"
			+ "      \"Large scale Hydro\": 282,\r\n"
			+ "      \"Plant biomass\": 0,\r\n"
			+ "      \"Animal biomass\": 67,\r\n"
			+ "      \"Landfill gas\": 232,\r\n"
			+ "      \"Sewage gas\": 135,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(1997, 0, 1),\r\n"
			+ "      \"Onshore wind\": 57,\r\n"
			+ "      \"Offshore wind\": 0,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 0,\r\n"
			+ "      \"Small scale Hydro\": 14,\r\n"
			+ "      \"Large scale Hydro\": 344,\r\n"
			+ "      \"Plant biomass\": 0,\r\n"
			+ "      \"Animal biomass\": 68,\r\n"
			+ "      \"Landfill gas\": 301,\r\n"
			+ "      \"Sewage gas\": 134,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(1998, 0, 1),\r\n"
			+ "      \"Onshore wind\": 75,\r\n"
			+ "      \"Offshore wind\": 0,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 0,\r\n"
			+ "      \"Small scale Hydro\": 18,\r\n"
			+ "      \"Large scale Hydro\": 422,\r\n"
			+ "      \"Plant biomass\": 0,\r\n"
			+ "      \"Animal biomass\": 76,\r\n"
			+ "      \"Landfill gas\": 389,\r\n"
			+ "      \"Sewage gas\": 126,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(1999, 0, 1),\r\n"
			+ "      \"Onshore wind\": 73,\r\n"
			+ "      \"Offshore wind\": 0,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 0,\r\n"
			+ "      \"Small scale Hydro\": 18,\r\n"
			+ "      \"Large scale Hydro\": 441,\r\n"
			+ "      \"Plant biomass\": 0,\r\n"
			+ "      \"Animal biomass\": 157,\r\n"
			+ "      \"Landfill gas\": 558,\r\n"
			+ "      \"Sewage gas\": 135,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2000, 0, 1),\r\n"
			+ "      \"Onshore wind\": 81,\r\n"
			+ "      \"Offshore wind\": 0,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 0,\r\n"
			+ "      \"Small scale Hydro\": 18,\r\n"
			+ "      \"Large scale Hydro\": 419,\r\n"
			+ "      \"Plant biomass\": 11,\r\n"
			+ "      \"Animal biomass\": 183,\r\n"
			+ "      \"Landfill gas\": 718,\r\n"
			+ "      \"Sewage gas\": 120,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2001, 0, 1),\r\n"
			+ "      \"Onshore wind\": 83,\r\n"
			+ "      \"Offshore wind\": 0,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 0,\r\n"
			+ "      \"Small scale Hydro\": 18,\r\n"
			+ "      \"Large scale Hydro\": 331,\r\n"
			+ "      \"Plant biomass\": 81,\r\n"
			+ "      \"Animal biomass\": 205,\r\n"
			+ "      \"Landfill gas\": 822,\r\n"
			+ "      \"Sewage gas\": 119,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2002, 0, 1),\r\n"
			+ "      \"Onshore wind\": 108,\r\n"
			+ "      \"Offshore wind\": 0,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 0,\r\n"
			+ "      \"Small scale Hydro\": 18,\r\n"
			+ "      \"Large scale Hydro\": 394,\r\n"
			+ "      \"Plant biomass\": 92,\r\n"
			+ "      \"Animal biomass\": 184,\r\n"
			+ "      \"Landfill gas\": 879,\r\n"
			+ "      \"Sewage gas\": 121,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2003, 0, 1),\r\n"
			+ "      \"Onshore wind\": 110,\r\n"
			+ "      \"Offshore wind\": 1,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 0,\r\n"
			+ "      \"Small scale Hydro\": 13,\r\n"
			+ "      \"Large scale Hydro\": 257,\r\n"
			+ "      \"Plant biomass\": 137,\r\n"
			+ "      \"Animal biomass\": 169,\r\n"
			+ "      \"Landfill gas\": 1075,\r\n"
			+ "      \"Sewage gas\": 129,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2004, 0, 1),\r\n"
			+ "      \"Onshore wind\": 149,\r\n"
			+ "      \"Offshore wind\": 17,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 0,\r\n"
			+ "      \"Small scale Hydro\": 24,\r\n"
			+ "      \"Large scale Hydro\": 392,\r\n"
			+ "      \"Plant biomass\": 123,\r\n"
			+ "      \"Animal biomass\": 179,\r\n"
			+ "      \"Landfill gas\": 1313,\r\n"
			+ "      \"Sewage gas\": 144,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2005, 0, 1),\r\n"
			+ "      \"Onshore wind\": 215,\r\n"
			+ "      \"Offshore wind\": 35,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 1,\r\n"
			+ "      \"Small scale Hydro\": 38,\r\n"
			+ "      \"Large scale Hydro\": 385,\r\n"
			+ "      \"Plant biomass\": 129,\r\n"
			+ "      \"Animal biomass\": 159,\r\n"
			+ "      \"Landfill gas\": 1407,\r\n"
			+ "      \"Sewage gas\": 153,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2006, 0, 1),\r\n"
			+ "      \"Onshore wind\": 307,\r\n"
			+ "      \"Offshore wind\": 56,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 1,\r\n"
			+ "      \"Small scale Hydro\": 41,\r\n"
			+ "      \"Large scale Hydro\": 354,\r\n"
			+ "      \"Plant biomass\": 123,\r\n"
			+ "      \"Animal biomass\": 145,\r\n"
			+ "      \"Landfill gas\": 1451,\r\n"
			+ "      \"Sewage gas\": 146,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2007, 0, 1),\r\n"
			+ "      \"Onshore wind\": 386,\r\n"
			+ "      \"Offshore wind\": 67,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 1,\r\n"
			+ "      \"Small scale Hydro\": 45,\r\n"
			+ "      \"Large scale Hydro\": 392,\r\n"
			+ "      \"Plant biomass\": 138,\r\n"
			+ "      \"Animal biomass\": 218,\r\n"
			+ "      \"Landfill gas\": 1534,\r\n"
			+ "      \"Sewage gas\": 162,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2008, 0, 1),\r\n"
			+ "      \"Onshore wind\": 498,\r\n"
			+ "      \"Offshore wind\": 115,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 1,\r\n"
			+ "      \"Small scale Hydro\": 47,\r\n"
			+ "      \"Large scale Hydro\": 396,\r\n"
			+ "      \"Plant biomass\": 242,\r\n"
			+ "      \"Animal biomass\": 260,\r\n"
			+ "      \"Landfill gas\": 1540,\r\n"
			+ "      \"Sewage gas\": 180,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2009, 0, 1),\r\n"
			+ "      \"Onshore wind\": 647,\r\n"
			+ "      \"Offshore wind\": 151,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 2,\r\n"
			+ "      \"Small scale Hydro\": 49,\r\n"
			+ "      \"Large scale Hydro\": 401,\r\n"
			+ "      \"Plant biomass\": 387,\r\n"
			+ "      \"Animal biomass\": 232,\r\n"
			+ "      \"Landfill gas\": 1613,\r\n"
			+ "      \"Sewage gas\": 198,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2010, 0, 1),\r\n"
			+ "      \"Onshore wind\": 621,\r\n"
			+ "      \"Offshore wind\": 263,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 3,\r\n"
			+ "      \"Small scale Hydro\": 43,\r\n"
			+ "      \"Large scale Hydro\": 266,\r\n"
			+ "      \"Plant biomass\": 461,\r\n"
			+ "      \"Animal biomass\": 239,\r\n"
			+ "      \"Landfill gas\": 1711,\r\n"
			+ "      \"Sewage gas\": 237,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2011, 0, 1),\r\n"
			+ "      \"Onshore wind\": 930,\r\n"
			+ "      \"Offshore wind\": 443,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 21,\r\n"
			+ "      \"Small scale Hydro\": 61,\r\n"
			+ "      \"Large scale Hydro\": 429,\r\n"
			+ "      \"Plant biomass\": 554,\r\n"
			+ "      \"Animal biomass\": 224,\r\n"
			+ "      \"Landfill gas\": 1744,\r\n"
			+ "      \"Sewage gas\": 254,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2012, 0, 1),\r\n"
			+ "      \"Onshore wind\": 1053,\r\n"
			+ "      \"Offshore wind\": 654,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 116,\r\n"
			+ "      \"Small scale Hydro\": 58,\r\n"
			+ "      \"Large scale Hydro\": 398,\r\n"
			+ "      \"Plant biomass\": 1062,\r\n"
			+ "      \"Animal biomass\": 225,\r\n"
			+ "      \"Landfill gas\": 1708,\r\n"
			+ "      \"Sewage gas\": 242,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2013, 0, 1),\r\n"
			+ "      \"Onshore wind\": 1455,\r\n"
			+ "      \"Offshore wind\": 986,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 173,\r\n"
			+ "      \"Small scale Hydro\": 58,\r\n"
			+ "      \"Large scale Hydro\": 346,\r\n"
			+ "      \"Plant biomass\": 2008,\r\n"
			+ "      \"Animal biomass\": 226,\r\n"
			+ "      \"Landfill gas\": 1697,\r\n"
			+ "      \"Sewage gas\": 251,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2014, 0, 1),\r\n"
			+ "      \"Onshore wind\": 1595,\r\n"
			+ "      \"Offshore wind\": 1153,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 349,\r\n"
			+ "      \"Small scale Hydro\": 72,\r\n"
			+ "      \"Large scale Hydro\": 435,\r\n"
			+ "      \"Plant biomass\": 2913,\r\n"
			+ "      \"Animal biomass\": 225,\r\n"
			+ "      \"Landfill gas\": 1651,\r\n"
			+ "      \"Sewage gas\": 276,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2015, 0, 1),\r\n"
			+ "      \"Onshore wind\": 1965,\r\n"
			+ "      \"Offshore wind\": 1498,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 648,\r\n"
			+ "      \"Small scale Hydro\": 85,\r\n"
			+ "      \"Large scale Hydro\": 457,\r\n"
			+ "      \"Plant biomass\": 3850,\r\n"
			+ "      \"Animal biomass\": 235,\r\n"
			+ "      \"Landfill gas\": 1598,\r\n"
			+ "      \"Sewage gas\": 293,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2016, 0, 1),\r\n"
			+ "      \"Onshore wind\": 1785,\r\n"
			+ "      \"Offshore wind\": 1411,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 894,\r\n"
			+ "      \"Small scale Hydro\": 87,\r\n"
			+ "      \"Large scale Hydro\": 374,\r\n"
			+ "      \"Plant biomass\": 3855,\r\n"
			+ "      \"Animal biomass\": 230,\r\n"
			+ "      \"Landfill gas\": 1542,\r\n"
			+ "      \"Sewage gas\": 312,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2017, 0, 1),\r\n"
			+ "      \"Onshore wind\": 2470,\r\n"
			+ "      \"Offshore wind\": 1798,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 985,\r\n"
			+ "      \"Small scale Hydro\": 112,\r\n"
			+ "      \"Large scale Hydro\": 394,\r\n"
			+ "      \"Plant biomass\": 4206,\r\n"
			+ "      \"Animal biomass\": 226,\r\n"
			+ "      \"Landfill gas\": 1405,\r\n"
			+ "      \"Sewage gas\": 317,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2018, 0, 1),\r\n"
			+ "      \"Onshore wind\": 2612,\r\n"
			+ "      \"Offshore wind\": 2281,\r\n"
			+ "      \"Marine energy\": 1,\r\n"
			+ "      \"Solar photovoltaics\": 1089,\r\n"
			+ "      \"Small scale Hydro\": 111,\r\n"
			+ "      \"Large scale Hydro\": 357,\r\n"
			+ "      \"Plant biomass\": 4898,\r\n"
			+ "      \"Animal biomass\": 219,\r\n"
			+ "      \"Landfill gas\": 1284,\r\n"
			+ "      \"Sewage gas\": 325,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2019, 0, 1),\r\n"
			+ "      \"Onshore wind\": 2739,\r\n"
			+ "      \"Offshore wind\": 2749,\r\n"
			+ "      \"Marine energy\": 1,\r\n"
			+ "      \"Solar photovoltaics\": 1068,\r\n"
			+ "      \"Small scale Hydro\": 120,\r\n"
			+ "      \"Large scale Hydro\": 390,\r\n"
			+ "      \"Plant biomass\": 5400,\r\n"
			+ "      \"Animal biomass\": 243,\r\n"
			+ "      \"Landfill gas\": 866,\r\n"
			+ "      \"Sewage gas\": 233,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2020, 0, 1),\r\n"
			+ "      \"Onshore wind\": 3004,\r\n"
			+ "      \"Offshore wind\": 3498,\r\n"
			+ "      \"Marine energy\": 1,\r\n"
			+ "      \"Solar photovoltaics\": 1109,\r\n"
			+ "      \"Small scale Hydro\": 134,\r\n"
			+ "      \"Large scale Hydro\": 456,\r\n"
			+ "      \"Plant biomass\": 5637,\r\n"
			+ "      \"Animal biomass\": 241,\r\n"
			+ "      \"Landfill gas\": 835,\r\n"
			+ "      \"Sewage gas\": 237,\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      year: new Date(2021, 0, 1),\r\n"
			+ "      \"Onshore wind\": 2507,\r\n"
			+ "      \"Offshore wind\": 3053,\r\n"
			+ "      \"Marine energy\": 0,\r\n"
			+ "      \"Solar photovoltaics\": 1044,\r\n"
			+ "      \"Small scale Hydro\": 119,\r\n"
			+ "      \"Large scale Hydro\": 353,\r\n"
			+ "      \"Plant biomass\": 5990,\r\n"
			+ "      \"Animal biomass\": 240,\r\n"
			+ "      \"Landfill gas\": 791,\r\n"
			+ "      \"Sewage gas\": 233,\r\n"
			+ "    },\r\n"
			+ "  ];\r\n"
			+ "}"
			;}
	public String curveToStylesCss()
	{ return ".wrapper {\r\n"
			+ "    height: 100%;\r\n"
			+ "    display: flex;\r\n"
			+ "    flex-direction: column;\r\n"
			+ "    overflow: hidden;\r\n"
			+ "}\r\n"
			+ "\r\n"
			+ ".toolPanel {\r\n"
			+ "    text-align: center;\r\n"
			+ "    font-size: 12px;\r\n"
			+ "    font-family: Verdana, Arial, Helvetica, sans-serif;\r\n"
			+ "}\r\n"
			+ "\r\n"
			+ ".spacer {\r\n"
			+ "    display: inline-block;\r\n"
			+ "    min-width: 20px;\r\n"
			+ "}\r\n"
			+ "\r\n"
			+ ".button--code {\r\n"
			+ "    font-family: SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;\r\n"
			+ "}\r\n"
			+ "\r\n"
			+ ".button-group {\r\n"
			+ "    white-space: nowrap;\r\n"
			+ "    display: inline-block;\r\n"
			+ "}\r\n"
			+ "\r\n"
			+ "#myChart {\r\n"
			+ "    height: 100%;\r\n"
			+ "}"
			;}

	public String curveToGraphJs(Stock s)
	{ 
		
		double ref=0;
		if (bnormalized)
			ref=s.getPrices(s.getLastDate()).getAverage();
		
		String t= "const options = {\r\n"
			+ "  container: document.getElementById(\"myChart\"),\r\n"
			+ "  title: {\r\n"
			+ "    text: `graph of "+s.getSymbol()+(bnormalized?" : "+ref:" ")+"`,\r\n"
			+ "  },\r\n"
		//	+ "  subtitle: {\r\n"
		//	+ "    text: `Kilotonnes of Oil Equivalent`,\r\n"
		//	+ "  },\r\n"
			+ "  data: getData(),\r\n"
			+ "  theme: {\r\n"
			+ "    overrides: {\r\n"
			+ "      line: {\r\n"
			+ "        series: {\r\n"
			+ "          lineDash: [12, 3],\r\n"
			+ "          marker: {\r\n"
			+ "            enabled: false,\r\n"
			+ "          },\r\n"
			+ "          tooltip: {\r\n"
			+ "            renderer: ({ datum, xKey, yKey }) => {\r\n"
			+ "              const date = Intl.DateTimeFormat(\"en-GB\", {\r\n"
			+ "                year: \"numeric\",\r\n"
			+ "                month: \"short\",\r\n"
			+ "              }).format(datum[xKey]);\r\n"
			+ "              return { content: `${date}: ${datum[yKey].toFixed(0)}` };\r\n"
			+ "            },\r\n"
			+ "          },\r\n"
			+ "        },\r\n"
			+ "      },\r\n"
			+ "    },\r\n"
			+ "  },\r\n"
			+ "  series: [\r\n"
			;
	
	t+=
			 "    {\r\n"
			+ "      type: \"line\",\r\n"
			+ "      xKey: \"year\",\r\n"
			+ "      yKey: \"Open\",\r\n"
			+ "      yName: \"Open\",\r\n"
			+ "    },\r\n";t+=
			 "    {\r\n"
			+ "      type: \"line\",\r\n"
			+ "      xKey: \"year\",\r\n"
			+ "      yKey: \"High\",\r\n"
			+ "      yName: \"High\",\r\n"
			+ "    },\r\n";
	
	t+=
			 "    {\r\n"
			+ "      type: \"line\",\r\n"
			+ "      xKey: \"year\",\r\n"
			+ "      yKey: \"Low\",\r\n"
			+ "      yName: \"Low\",\r\n"
			+ "    },\r\n";
	
	t+=
			 "    {\r\n"
			+ "      type: \"line\",\r\n"
			+ "      xKey: \"year\",\r\n"
			+ "      yKey: \"Close\",\r\n"
			+ "      yName: \"Close\",\r\n"
			+ "    },\r\n";
	
	t+=
			 "    {\r\n"
			+ "      type: \"line\",\r\n"
			+ "      xKey: \"year\",\r\n"
			+ "      yKey: \"Adj Close\",\r\n"
			+ "      yName: \"Adj Close\",\r\n"
			+ "    },\r\n";
			
	t+=
			 "    {\r\n"
			+ "      type: \"line\",\r\n"
			+ "      xKey: \"year\",\r\n"
			+ "      yKey: \"Volume\",\r\n"
			+ "      yName: \"Volume\",\r\n"
			+ "    },\r\n";
			
			
t+=
			 "  ],\r\n"
			+ "  axes: [\r\n"
			+ "    {\r\n"
			+ "      position: \"bottom\",\r\n"
			+ "      type: \"time\",\r\n"
			
			+ "      min: new Date("+(s.getFirstDate().getYear()+1900)+", "+(s.getFirstDate().getMonth()+0)+", "+s.getFirstDate().getDate()+"),\r\n"
			+ "      max: new Date("+(s.getLastDate().getYear()+1900)+", "+(s.getLastDate().getMonth()+0)+", "+s.getLastDate().getDate()+"),\r\n"
			+ "      nice: false,\r\n"
			+ "      line: {\r\n"
			+ "        enabled: false,\r\n"
			+ "      },\r\n"
			+ "      tick: {\r\n"
			+ "          interval: 5,\r\n"
			+ "      },\r\n"
			+ "      gridLine: {\r\n"
			+ "        style: [\r\n"
			+ "          {\r\n"
			+ "            stroke: \"rgb(216,216,216)\",\r\n"
			+ "            lineDash: [2, 2],\r\n"
			+ "          },\r\n"
			+ "        ],\r\n"
			+ "      },\r\n"
			
			+ "      crosshair: {\r\n"
			+ "        label: {\r\n"
			+ "          format: `%d %b %Y`,\r\n"
			+ "        },\r\n"
			+ "      },\r\n"
			+ "    },\r\n"
			
			+" {\r\n"
			+ "      position: \"left\",\r\n"
			+ "      type: \"number\",\r\n"
			+ "      keys: [\"Volume\"],\r\n"
			+ "      title: {\r\n"
			+ "        text: \"Volume\",\r\n"
			+ "      },\r\n"
			+ "      gridLine: {\r\n"
			+ "        enabled: false,\r\n"
			+ "      },\r\n"
			+ "      label: {\r\n"
			+ "        formatter: ({ value }) => `${value / 1000000}M`,\r\n"
			+ "        padding: 15,\r\n"
			+ "      },\r\n"
			+ "      crosshair: {\r\n"
			+ "        label: {\r\n"
			+ "          format: `s`,\r\n"
			+ "        },\r\n"
			+ "      },\r\n"
			+ "    },\r\n"
			/*+ "      crossLines: [\r\n"
			+ "        {\r\n"
			+ "          type: \"line\",\r\n"
			+ "          value: new Date(2020, 0, 1),\r\n"
			+ "          label: {\r\n"
			+ "            text: \"COVID-19 START\",\r\n"
			+ "            padding: 10,\r\n"
			+ "          },\r\n"
			+ "        },\r\n"
			
			+ "      ],\r\n"*/
			
			+ "    {\r\n"
			+ "      position: \"right\",\r\n"
			+ "      type: \"number\",\r\n"
			+ "      title: {\r\n"
			+ "        text: `Price`,\r\n"
			+ "      },\r\n"
			+ "      label: {\r\n"
			+ "        formatter: (params) => `${params.value }`,\r\n"
			+ "      },\r\n"
			+ "    },\r\n"
			+ "  ],\r\n"
			+ "};\r\n"
			+ "\r\n"
			+ "agCharts.AgCharts.create(options);";
return t;
}
	public String curveToGraphJs(List<Stock> ls)
	{ 
		
		
		String t= "const options = {\r\n"
			+ "  container: document.getElementById(\"myChart\"),\r\n"
			+ "  title: {\r\n"
			+ "    text: `graph of cryptos "+"`,\r\n"
			+ "  },\r\n"
		//	+ "  subtitle: {\r\n"
		//	+ "    text: `Kilotonnes of Oil Equivalent`,\r\n"
		//	+ "  },\r\n"
			+ "  data: getData(),\r\n"
			+ "  theme: {\r\n"
			+ "    overrides: {\r\n"
			+ "      line: {\r\n"
			+ "        series: {\r\n"
			+ "          lineDash: [12, 3],\r\n"
			+ "          marker: {\r\n"
			+ "            enabled: false,\r\n"
			+ "          },\r\n"
			+ "          tooltip: {\r\n"
			+ "            renderer: ({ datum, xKey, yKey }) => {\r\n"
			+ "              const date = Intl.DateTimeFormat(\"en-GB\", {\r\n"
			+ "                year: \"numeric\",\r\n"
			+ "                month: \"short\",\r\n"
			+ "              }).format(datum[xKey]);\r\n"
			+ "              return { content: `${date}: ${datum[yKey].toFixed(0)}` };\r\n"
			+ "            },\r\n"
			+ "          },\r\n"
			+ "        },\r\n"
			+ "      },\r\n"
			+ "    },\r\n"
			+ "  },\r\n"
			+ "  series: [\r\n"
			;
		Date b=ls.get(0).getFirstDate();
		Date e=ls.get(0).getLastDate();
		for(Stock s:ls)
		{
			double ref=0;
		if (bnormalized)
			ref=s.getPrices(s.getLastDate()).getAverage();
		if (s.getFirstDate().before(b))
			b=s.getFirstDate();
		if (s.getLastDate().after(e))
			e=s.getLastDate();
		
		
		t+=
		 "    {\r\n"
		+ "      type: \"line\",\r\n"
		+ "      xKey: \"year\",\r\n"
		+ "      yKey: \""+s.getSymbol()+"\",\r\n"
		+ "      yName: \""+s.getSymbol()+(bnormalized?" : "+ref:" ")+"\",\r\n"
		+ "    },\r\n";
		}
	/*
	t+=
			 "    {\r\n"
			+ "      type: \"line\",\r\n"
			+ "      xKey: \"year\",\r\n"
			+ "      yKey: \"Open\",\r\n"
			+ "      yName: \"Open\",\r\n"
			+ "    },\r\n";
			t+=
			 "    {\r\n"
			+ "      type: \"line\",\r\n"
			+ "      xKey: \"year\",\r\n"
			+ "      yKey: \"High\",\r\n"
			+ "      yName: \"High\",\r\n"
			+ "    },\r\n";
	
	t+=
			 "    {\r\n"
			+ "      type: \"line\",\r\n"
			+ "      xKey: \"year\",\r\n"
			+ "      yKey: \"Low\",\r\n"
			+ "      yName: \"Low\",\r\n"
			+ "    },\r\n";
	
	t+=
			 "    {\r\n"
			+ "      type: \"line\",\r\n"
			+ "      xKey: \"year\",\r\n"
			+ "      yKey: \"Close\",\r\n"
			+ "      yName: \"Close\",\r\n"
			+ "    },\r\n";
	
	t+=
			 "    {\r\n"
			+ "      type: \"line\",\r\n"
			+ "      xKey: \"year\",\r\n"
			+ "      yKey: \"Adj Close\",\r\n"
			+ "      yName: \"Adj Close\",\r\n"
			+ "    },\r\n";
			
	t+=
			 "    {\r\n"
			+ "      type: \"line\",\r\n"
			+ "      xKey: \"year\",\r\n"
			+ "      yKey: \"Volume\",\r\n"
			+ "      yName: \"Volume\",\r\n"
			+ "    },\r\n";
			
	*/		
		if (datestart!=null)
			b=datestart;
t+=
			 "  ],\r\n"
			+ "  axes: [\r\n"
			+ "    {\r\n"
			+ "      position: \"bottom\",\r\n"
			+ "      type: \"time\",\r\n"
			
			+ "      min: new Date("+(b.getYear()+1900)+", "+(b.getMonth()+0)+", "+b.getDate()+"),\r\n"
			+ "      max: new Date("+(e.getYear()+1900)+", "+(e.getMonth()+0)+", "+e.getDate()+"),\r\n"
			+ "      nice: false,\r\n"
			+ "      line: {\r\n"
			+ "        enabled: false,\r\n"
			+ "      },\r\n"
			+ "      tick: {\r\n"
			+ "          interval: 5,\r\n"
			+ "      },\r\n"
			+ "      gridLine: {\r\n"
			+ "        style: [\r\n"
			+ "          {\r\n"
			+ "            stroke: \"rgb(216,216,216)\",\r\n"
			+ "            lineDash: [2, 2],\r\n"
			+ "          },\r\n"
			+ "        ],\r\n"
			+ "      },\r\n"
			
			+ "      crosshair: {\r\n"
			+ "        label: {\r\n"
			+ "          format: `%d %b %Y`,\r\n"
			+ "        },\r\n"
			+ "      },\r\n"
			+ "    },\r\n"
			/*
			+" {\r\n"
			+ "      position: \"left\",\r\n"
			+ "      type: \"number\",\r\n"
			+ "      keys: [\"Volume\"],\r\n"
			+ "      title: {\r\n"
			+ "        text: \"Volume\",\r\n"
			+ "      },\r\n"
			+ "      gridLine: {\r\n"
			+ "        enabled: false,\r\n"
			+ "      },\r\n"
			+ "      label: {\r\n"
			+ "        formatter: ({ value }) => `${value / 1000000}M`,\r\n"
			+ "        padding: 15,\r\n"
			+ "      },\r\n"
			+ "      crosshair: {\r\n"
			+ "        label: {\r\n"
			+ "          format: `s`,\r\n"
			+ "        },\r\n"
			+ "      },\r\n"
			+ "    },\r\n"*/
			/*+ "      crossLines: [\r\n"
			+ "        {\r\n"
			+ "          type: \"line\",\r\n"
			+ "          value: new Date(2020, 0, 1),\r\n"
			+ "          label: {\r\n"
			+ "            text: \"COVID-19 START\",\r\n"
			+ "            padding: 10,\r\n"
			+ "          },\r\n"
			+ "        },\r\n"
			
			+ "      ],\r\n"*/
			
			+ "    {\r\n"
			+ "      position: \"right\",\r\n"
			+ "      type: \"number\",\r\n"
			+ "      title: {\r\n"
			+ "        text: `Price`,\r\n"
			+ "      },\r\n"
			+ "      label: {\r\n"
			+ "        formatter: (params) => `${params.value }`,\r\n"
			+ "      },\r\n"
			+ "    },\r\n"
			+ "  ],\r\n"
			+ "};\r\n"
			+ "\r\n"
			+ "agCharts.AgCharts.create(options);";
return t;
}
	public String ToGraphJs(List<Stock> ls)
	{
		String t= "const options = {\r\n"
				+ "  container: document.getElementById(\"myChart\"),\r\n"
				+ "  data: getData(),\r\n"
				+ "  title: {\r\n"
				+ "    text: \"Changes in Prison Population\",\r\n"
				+ "  },\r\n"
				+ "  footnote: {\r\n"
				+ "    text: \"Source: Ministry of Justice, HM Prison Service, and HM’s Prison and Probation Service\",\r\n"
				+ "  },\r\n"
				+ "  series: [\r\n";
				for (Stock s:ls)
				t+= "    {\r\n"
				+ "      type: \"bar\",\r\n"
				+ "      direction: \"horizontal\",\r\n"
				+ "      xKey: \"bin\",\r\n"
				+ "      yKey: \""+s.getSymbol().replaceAll("-", "_")+"\",\r\n"
				+ "      yName: \""+s.getSymbol()+"\",\r\n"
				+ "      cornerRadius: 20,\r\n"
				+ "      label: {\r\n"
				+ "        formatter: ({ value }) => value.toFixed(0),\r\n"
				+ "      },\r\n"
				+ "    },\r\n";
				/*
				+ "    {\r\n"
				+ "      type: \"bar\",\r\n"
				+ "      direction: \"horizontal\",\r\n"
				+ "      xKey: \"month\",\r\n"
				+ "      yKey: \"womenDelta\",\r\n"
				+ "      yName: \"Female\",\r\n"
				+ "      cornerRadius: 20,\r\n"
				+ "      label: {\r\n"
				+ "        formatter: ({ value }) => value.toFixed(0),\r\n"
				+ "      },\r\n"
				+ "    },\r\n"*/
				t+= "  ],\r\n"
				+ "  axes: [\r\n"
				+ "    {\r\n"
				+ "      type: \"category\",\r\n"
				+ "      position: \"left\",\r\n"
				+ "      line: {\r\n"
				+ "        enabled: false,\r\n"
				+ "      },\r\n"
				+ "      label: {\r\n"
				+ "        enabled: false,\r\n"
				+ "      },\r\n"
				+ "      paddingInner: 0.2,\r\n"
				+ "      crossLines: [\r\n"
				+ "        {\r\n"
				+ "          type: \"line\",\r\n"
				+ "          value: \"Jul\",\r\n"
				+ "          strokeWidth: 0,\r\n"
				+ "          fillOpacity: 0,\r\n"
				+ "          label: {\r\n"
				+ "            text: \"→ JUL\",\r\n"
				+ "            position: \"insideRight\",\r\n"
				+ "          },\r\n"
				+ "        },\r\n"
				+ "        {\r\n"
				+ "          type: \"range\",\r\n"
				+ "          range: [\"Aug\", \"Aug\"],\r\n"
				+ "          strokeWidth: 0,\r\n"
				+ "          fillOpacity: 0,\r\n"
				+ "          label: {\r\n"
				+ "            text: \"→ AUG\",\r\n"
				+ "            position: \"insideRight\",\r\n"
				+ "          },\r\n"
				+ "        },\r\n"
				+ "        {\r\n"
				+ "          type: \"range\",\r\n"
				+ "          range: [\"Sep\", \"Sep\"],\r\n"
				+ "          strokeWidth: 0,\r\n"
				+ "          fillOpacity: 0,\r\n"
				+ "          label: {\r\n"
				+ "            text: \"→ SEP\",\r\n"
				+ "            position: \"insideRight\",\r\n"
				+ "          },\r\n"
				+ "        },\r\n"
				+ "        {\r\n"
				+ "          type: \"range\",\r\n"
				+ "          range: [\"Oct\", \"Oct\"],\r\n"
				+ "          strokeWidth: 0,\r\n"
				+ "          fillOpacity: 0,\r\n"
				+ "\r\n"
				+ "          label: {\r\n"
				+ "            text: \"→ OCT\",\r\n"
				+ "            position: \"insideRight\",\r\n"
				+ "          },\r\n"
				+ "        },\r\n"
				+ "        {\r\n"
				+ "          type: \"range\",\r\n"
				+ "          range: [\"Nov\", \"Nov\"],\r\n"
				+ "          strokeWidth: 0,\r\n"
				+ "          fillOpacity: 0,\r\n"
				+ "          label: {\r\n"
				+ "            text: \"NOV ←\",\r\n"
				+ "            position: \"insideLeft\",\r\n"
				+ "          },\r\n"
				+ "        },\r\n"
				+ "        {\r\n"
				+ "          type: \"range\",\r\n"
				+ "          range: [\"Dec\", \"Dec\"],\r\n"
				+ "          strokeWidth: 0,\r\n"
				+ "          fillOpacity: 0,\r\n"
				+ "          label: {\r\n"
				+ "            text: \"DEC ←\",\r\n"
				+ "            position: \"insideLeft\",\r\n"
				+ "          },\r\n"
				+ "        },\r\n"
				+ "      ],\r\n"
				+ "    },\r\n"
				+ "    {\r\n"
				+ "      type: \"number\",\r\n"
				+ "      position: \"bottom\",\r\n"
				+ "      nice: false,\r\n"
			//	+ "      min: -300,\r\n"
			//	+ "      max: 500,\r\n"
				+ "      label: {\r\n"
				+ "        enabled: true,\r\n"
				+ "      },\r\n"
				+ "    },\r\n"
				+ "  ],\r\n"
				+ "};\r\n"
				+ "\r\n"
				+ "agCharts.AgCharts.create(options);"
				+ "\r\n"; 
				return t;
	}
	public String ToGraphJs()
	{
		return "const options = {\r\n"
				+ "  container: document.getElementById(\"myChart\"),\r\n"
				+ "  data: getData(),\r\n"
				+ "  title: {\r\n"
				+ "    text: \"Changes in Prison Population\",\r\n"
				+ "  },\r\n"
				+ "  footnote: {\r\n"
				+ "    text: \"Source: Ministry of Justice, HM Prison Service, and HM’s Prison and Probation Service\",\r\n"
				+ "  },\r\n"
				+ "  series: [\r\n"
				+ "    {\r\n"
				+ "      type: \"bar\",\r\n"
				+ "      direction: \"horizontal\",\r\n"
				+ "      xKey: \"month\",\r\n"
				+ "      yKey: \"menDelta\",\r\n"
				+ "      yName: \"Male\",\r\n"
				+ "      cornerRadius: 20,\r\n"
				+ "      label: {\r\n"
				+ "        formatter: ({ value }) => value.toFixed(0),\r\n"
				+ "      },\r\n"
				+ "    },\r\n"
				+ "    {\r\n"
				+ "      type: \"bar\",\r\n"
				+ "      direction: \"horizontal\",\r\n"
				+ "      xKey: \"month\",\r\n"
				+ "      yKey: \"womenDelta\",\r\n"
				+ "      yName: \"Female\",\r\n"
				+ "      cornerRadius: 20,\r\n"
				+ "      label: {\r\n"
				+ "        formatter: ({ value }) => value.toFixed(0),\r\n"
				+ "      },\r\n"
				+ "    },\r\n"
				+ "  ],\r\n"
				+ "  axes: [\r\n"
				+ "    {\r\n"
				+ "      type: \"category\",\r\n"
				+ "      position: \"left\",\r\n"
				+ "      line: {\r\n"
				+ "        enabled: false,\r\n"
				+ "      },\r\n"
				+ "      label: {\r\n"
				+ "        enabled: false,\r\n"
				+ "      },\r\n"
				+ "      paddingInner: 0.2,\r\n"
				+ "      crossLines: [\r\n"
				+ "        {\r\n"
				+ "          type: \"line\",\r\n"
				+ "          value: \"Jul\",\r\n"
				+ "          strokeWidth: 0,\r\n"
				+ "          fillOpacity: 0,\r\n"
				+ "          label: {\r\n"
				+ "            text: \"→ JUL\",\r\n"
				+ "            position: \"insideRight\",\r\n"
				+ "          },\r\n"
				+ "        },\r\n"
				+ "        {\r\n"
				+ "          type: \"range\",\r\n"
				+ "          range: [\"Aug\", \"Aug\"],\r\n"
				+ "          strokeWidth: 0,\r\n"
				+ "          fillOpacity: 0,\r\n"
				+ "          label: {\r\n"
				+ "            text: \"→ AUG\",\r\n"
				+ "            position: \"insideRight\",\r\n"
				+ "          },\r\n"
				+ "        },\r\n"
				+ "        {\r\n"
				+ "          type: \"range\",\r\n"
				+ "          range: [\"Sep\", \"Sep\"],\r\n"
				+ "          strokeWidth: 0,\r\n"
				+ "          fillOpacity: 0,\r\n"
				+ "          label: {\r\n"
				+ "            text: \"→ SEP\",\r\n"
				+ "            position: \"insideRight\",\r\n"
				+ "          },\r\n"
				+ "        },\r\n"
				+ "        {\r\n"
				+ "          type: \"range\",\r\n"
				+ "          range: [\"Oct\", \"Oct\"],\r\n"
				+ "          strokeWidth: 0,\r\n"
				+ "          fillOpacity: 0,\r\n"
				+ "\r\n"
				+ "          label: {\r\n"
				+ "            text: \"→ OCT\",\r\n"
				+ "            position: \"insideRight\",\r\n"
				+ "          },\r\n"
				+ "        },\r\n"
				+ "        {\r\n"
				+ "          type: \"range\",\r\n"
				+ "          range: [\"Nov\", \"Nov\"],\r\n"
				+ "          strokeWidth: 0,\r\n"
				+ "          fillOpacity: 0,\r\n"
				+ "          label: {\r\n"
				+ "            text: \"NOV ←\",\r\n"
				+ "            position: \"insideLeft\",\r\n"
				+ "          },\r\n"
				+ "        },\r\n"
				+ "        {\r\n"
				+ "          type: \"range\",\r\n"
				+ "          range: [\"Dec\", \"Dec\"],\r\n"
				+ "          strokeWidth: 0,\r\n"
				+ "          fillOpacity: 0,\r\n"
				+ "          label: {\r\n"
				+ "            text: \"DEC ←\",\r\n"
				+ "            position: \"insideLeft\",\r\n"
				+ "          },\r\n"
				+ "        },\r\n"
				+ "      ],\r\n"
				+ "    },\r\n"
				+ "    {\r\n"
				+ "      type: \"number\",\r\n"
				+ "      position: \"bottom\",\r\n"
				+ "      nice: false,\r\n"
				+ "      min: -300,\r\n"
				+ "      max: 500,\r\n"
				+ "      label: {\r\n"
				+ "        enabled: false,\r\n"
				+ "      },\r\n"
				+ "    },\r\n"
				+ "  ],\r\n"
				+ "};\r\n"
				+ "\r\n"
				+ "agCharts.AgCharts.create(options);"
				+ "\r\n"; 
	}
	
	public String curveToGraphJs()
	{ return "const options = {\r\n"
			+ "  container: document.getElementById(\"myChart\"),\r\n"
			+ "  title: {\r\n"
			+ "    text: `Renewable Fuel Sources`,\r\n"
			+ "  },\r\n"
			+ "  subtitle: {\r\n"
			+ "    text: `Kilotonnes of Oil Equivalent`,\r\n"
			+ "  },\r\n"
			+ "  data: getData(),\r\n"
			+ "  theme: {\r\n"
			+ "    overrides: {\r\n"
			+ "      line: {\r\n"
			+ "        series: {\r\n"
			+ "          lineDash: [12, 3],\r\n"
			+ "          marker: {\r\n"
			+ "            enabled: false,\r\n"
			+ "          },\r\n"
			+ "          tooltip: {\r\n"
			+ "            renderer: ({ datum, xKey, yKey }) => {\r\n"
			+ "              const date = Intl.DateTimeFormat(\"en-GB\", {\r\n"
			+ "                year: \"numeric\",\r\n"
			+ "                month: \"short\",\r\n"
			+ "              }).format(datum[xKey]);\r\n"
			+ "              return { content: `${date}: ${datum[yKey].toFixed(0)}` };\r\n"
			+ "            },\r\n"
			+ "          },\r\n"
			+ "        },\r\n"
			+ "      },\r\n"
			+ "    },\r\n"
			+ "  },\r\n"
			+ "  series: [\r\n"
			+ "    {\r\n"
			+ "      type: \"line\",\r\n"
			+ "      xKey: \"year\",\r\n"
			+ "      yKey: \"Onshore wind\",\r\n"
			+ "      yName: \"Onshore Wind\",\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      type: \"line\",\r\n"
			+ "      xKey: \"year\",\r\n"
			+ "      yKey: \"Offshore wind\",\r\n"
			+ "      yName: \"Offshore Wind\",\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      type: \"line\",\r\n"
			+ "      xKey: \"year\",\r\n"
			+ "      yKey: \"Solar photovoltaics\",\r\n"
			+ "      yName: \"Solar Photovoltaics\",\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      type: \"line\",\r\n"
			+ "      xKey: \"year\",\r\n"
			+ "      yKey: \"Plant biomass\",\r\n"
			+ "      yName: \"Plant Biomass\",\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      type: \"line\",\r\n"
			+ "      xKey: \"year\",\r\n"
			+ "      yKey: \"Landfill gas\",\r\n"
			+ "      yName: \"Landfill Gas\",\r\n"
			+ "    },\r\n"
			+ "  ],\r\n"
			+ "  axes: [\r\n"
			+ "    {\r\n"
			+ "      position: \"bottom\",\r\n"
			+ "      type: \"time\",\r\n"
			+ "      min: new Date(2000, 0, 1),\r\n"
			+ "      max: new Date(2022, 0, 1),\r\n"
			+ "      nice: false,\r\n"
			+ "      crosshair: {\r\n"
			+ "        label: {\r\n"
			+ "          format: `%d %b %Y`,\r\n"
			+ "        },\r\n"
			+ "      },\r\n"
			+ "      crossLines: [\r\n"
			+ "        {\r\n"
			+ "          type: \"line\",\r\n"
			+ "          value: new Date(2020, 0, 1),\r\n"
			+ "          label: {\r\n"
			+ "            text: \"COVID-19 START\",\r\n"
			+ "            padding: 10,\r\n"
			+ "          },\r\n"
			+ "        },\r\n"
			+ "      ],\r\n"
			+ "    },\r\n"
			+ "    {\r\n"
			+ "      position: \"right\",\r\n"
			+ "      type: \"number\",\r\n"
			+ "      title: {\r\n"
			+ "        text: `ktoe`,\r\n"
			+ "      },\r\n"
			+ "      label: {\r\n"
			+ "        formatter: (params) => `${params.value / 1000}K`,\r\n"
			+ "      },\r\n"
			+ "    },\r\n"
			+ "  ],\r\n"
			+ "};\r\n"
			+ "\r\n"
			+ "agCharts.AgCharts.create(options);";}
	
	public String ToPageHtml()
	{ return "<!doctype html>\r\n"
			+ "<html lang=\"en\">\r\n"
			+ "  <head>\r\n"
			+ "    <title>JavaScript Example - Bar - Grouped Horizontal Bar</title>\r\n"
			+ "    <meta charset=\"UTF-8\" />\r\n"
			+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n"
			+ "    <meta name=\"robots\" content=\"noindex\" />\r\n"
			+ "    <style media=\"only screen\">\r\n"
			+ "      :root {\r\n"
			+ "        position: absolute;\r\n"
			+ "        top: 0;\r\n"
			+ "        left: 0;\r\n"
			+ "        padding: 0;\r\n"
			+ "        overflow: hidden;\r\n"
			+ "        font-family: -apple-system, \"system-ui\", \"Segoe UI\", Roboto,\r\n"
			+ "          \"Helvetica Neue\", Arial, \"Noto Sans\", \"Liberation Sans\", sans-serif,\r\n"
			+ "          \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\",\r\n"
			+ "          \"Noto Color Emoji\";\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      :root[data-dark-mode=\"true\"] {\r\n"
			+ "        background: #192232;\r\n"
			+ "        color: white;\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      :root,\r\n"
			+ "      body {\r\n"
			+ "        height: 100%;\r\n"
			+ "        width: 100%;\r\n"
			+ "        margin: 0;\r\n"
			+ "        box-sizing: border-box;\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      body {\r\n"
			+ "        display: grid;\r\n"
			+ "        grid-auto-rows: minmax(0, 1fr);\r\n"
			+ "        grid-auto-columns: minmax(0, 1fr);\r\n"
			+ "        padding: 1rem;\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      [data-ag-charts] {\r\n"
			+ "        overflow: hidden;\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      /* Center charts with explicit width and heights */\r\n"
			+ "      .ag-chart-wrapper {\r\n"
			+ "        display: flex !important;\r\n"
			+ "        align-items: center !important;\r\n"
			+ "        justify-content: center !important;\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      button:not(\r\n"
			+ "          #myGrid button,\r\n"
			+ "          #myChart button,\r\n"
			+ "          button[class*=\"ag-\"],\r\n"
			+ "          .ag-chart-context-menu button\r\n"
			+ "        ) {\r\n"
			+ "        --background-color: transparent;\r\n"
			+ "        --text-color: #212529;\r\n"
			+ "        --color-border-primary: #d0d5dd;\r\n"
			+ "        --hover-background-color: rgba(0, 0, 0, 0.1);\r\n"
			+ "\r\n"
			+ "        appearance: none;\r\n"
			+ "        border: 1px solid var(--color-border-primary);\r\n"
			+ "        border-radius: 6px;\r\n"
			+ "        height: 36px;\r\n"
			+ "        color: var(--text-color);\r\n"
			+ "        background-color: var(--background-color);\r\n"
			+ "        cursor: pointer;\r\n"
			+ "        display: inline-block;\r\n"
			+ "        font-size: 14px;\r\n"
			+ "        font-weight: 500;\r\n"
			+ "        letter-spacing: 0.01em;\r\n"
			+ "        padding: 0.375em 1em 0.5em;\r\n"
			+ "        white-space: nowrap;\r\n"
			+ "        margin-right: 6px;\r\n"
			+ "        margin-bottom: 8px;\r\n"
			+ "        transition: background-color 0.25s ease-in-out;\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      button:not(\r\n"
			+ "          #myGrid button,\r\n"
			+ "          #myChart button,\r\n"
			+ "          button[class*=\"ag-\"],\r\n"
			+ "          .ag-chart-context-menu button\r\n"
			+ "        ):hover {\r\n"
			+ "        background-color: var(--hover-background-color);\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      :root[data-dark-mode=\"true\"]\r\n"
			+ "        button:not(\r\n"
			+ "          #myGrid button,\r\n"
			+ "          #myChart button,\r\n"
			+ "          button[class*=\"ag-\"],\r\n"
			+ "          .ag-chart-context-menu button\r\n"
			+ "        ) {\r\n"
			+ "        --text-color: #f8f9fa;\r\n"
			+ "        --color-border-primary: rgba(255, 255, 255, 0.2);\r\n"
			+ "        --hover-background-color: #2a343e;\r\n"
			+ "      }\r\n"
			+ "    </style>\r\n"
			+ "    <style>\r\n"
			+ "      ._icon_1tqo9_1 {\r\n"
			+ "        fill: var(--color-icon);\r\n"
			+ "        width: var(--icon-size);\r\n"
			+ "        height: var(--icon-size);\r\n"
			+ "      }\r\n"
			+ "      ._cta_x2rta_1 {\r\n"
			+ "        position: relative;\r\n"
			+ "        display: flex;\r\n"
			+ "        justify-content: center;\r\n"
			+ "        align-items: center;\r\n"
			+ "        width: 40px;\r\n"
			+ "        height: 40px;\r\n"
			+ "        border-radius: var(--radius-sm);\r\n"
			+ "        transition:\r\n"
			+ "          color 0.25s ease-in-out,\r\n"
			+ "          background-color 0.25s ease-in-out;\r\n"
			+ "        cursor: pointer;\r\n"
			+ "      }\r\n"
			+ "      ._cta_x2rta_1:hover {\r\n"
			+ "        background-color: var(--color-util-brand-100);\r\n"
			+ "      }\r\n"
			+ "      ._cta_x2rta_1 svg {\r\n"
			+ "        --icon-size: 1.25em;\r\n"
			+ "        fill: var(--color-link);\r\n"
			+ "        transform: translate(1px, 0.75px);\r\n"
			+ "        transition: fill 0.25s ease-in-out;\r\n"
			+ "      }\r\n"
			+ "      li:first-child ._cta_x2rta_1 svg {\r\n"
			+ "        --icon-size: 1.35em;\r\n"
			+ "      }\r\n"
			+ "      [data-dark-mode=\"true\"] ._cta_x2rta_1:hover {\r\n"
			+ "        background-color: var(--color-util-brand-50);\r\n"
			+ "      }\r\n"
			+ "      ._tooltip_x2rta_28 {\r\n"
			+ "        --tooltip-background: var(--color-fg-primary);\r\n"
			+ "        position: absolute;\r\n"
			+ "        display: block;\r\n"
			+ "        color: var(--color-bg-primary);\r\n"
			+ "        top: -44px;\r\n"
			+ "        padding: 4px 16px;\r\n"
			+ "        white-space: nowrap;\r\n"
			+ "        font-weight: 600;\r\n"
			+ "        background-color: var(--tooltip-background);\r\n"
			+ "        border-radius: 6px;\r\n"
			+ "        transform: translateY(4px);\r\n"
			+ "        opacity: 0;\r\n"
			+ "        pointer-events: none;\r\n"
			+ "        transition-delay: 0;\r\n"
			+ "        transition:\r\n"
			+ "          opacity 0.165s ease-in,\r\n"
			+ "          transform 0.165s ease-in;\r\n"
			+ "        z-index: 1;\r\n"
			+ "      }\r\n"
			+ "      ._tooltip_x2rta_28:before {\r\n"
			+ "        content: \"\";\r\n"
			+ "        position: absolute;\r\n"
			+ "        background-color: var(--tooltip-background);\r\n"
			+ "        width: 16px;\r\n"
			+ "        height: 16px;\r\n"
			+ "        transform: rotate(45deg);\r\n"
			+ "        bottom: -7px;\r\n"
			+ "        left: calc(50% - 8px);\r\n"
			+ "        border-radius: 3px;\r\n"
			+ "        z-index: -1;\r\n"
			+ "      }\r\n"
			+ "      ._cta_x2rta_1:hover ._tooltip_x2rta_28 {\r\n"
			+ "        opacity: 1;\r\n"
			+ "        transform: translateY(0);\r\n"
			+ "        transition:\r\n"
			+ "          opacity 0.33s ease-in,\r\n"
			+ "          transform 0.33s ease-in;\r\n"
			+ "        transition-delay: 0.165s;\r\n"
			+ "      }\r\n"
			+ "      [data-dark-mode=\"true\"] ._tooltip_x2rta_28 {\r\n"
			+ "        --tooltip-background: var(--color-bg-secondary);\r\n"
			+ "        color: var(--color-fg-primary);\r\n"
			+ "        box-shadow: 0 -4px 16px #0006;\r\n"
			+ "      }\r\n"
			+ "    </style>\r\n"
			+ "  </head>\r\n"
			+ "  <body>\r\n"
			+ "    <div id=\"myChart\"></div>\r\n"
			+ "    <script>\r\n"
			+ "      (function () {\r\n"
			+ "        const appLocation = \"/gallery/examples/grouped-horizontal-bar\";\r\n"
			+ "\r\n"
			+ "        window.__basePath = appLocation;\r\n"
			+ "      })();\r\n"
			+ "    </script>\r\n"
			+ "    <script src=\"https://cdn.jsdelivr.net/npm/ag-charts-enterprise@9.3.1/dist/umd/ag-charts-enterprise.js?t=1714485021563\"></script>\r\n"
			+ "    <script src=\"./data.js\"></script>\r\n"
			+ "    <script src=\"./main.js\"></script>\r\n"
			+ "  </body>\r\n"
			+ "</html>";}
	
	public String curveToPageHtml()
	{ return "<!doctype html>\r\n"
			+ "<html lang=\"en\">\r\n"
			+ "  <head>\r\n"
			+ "    <title>JavaScript Example - Line - Line With Time Axis</title>\r\n"
			+ "    <meta charset=\"UTF-8\" />\r\n"
			+ "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n"
			+ "    <meta name=\"robots\" content=\"noindex\" />\r\n"
			+ "    <style media=\"only screen\">\r\n"
			+ "      :root {\r\n"
			+ "        position: absolute;\r\n"
			+ "        top: 0;\r\n"
			+ "        left: 0;\r\n"
			+ "        padding: 0;\r\n"
			+ "        overflow: hidden;\r\n"
			+ "        font-family: -apple-system, \"system-ui\", \"Segoe UI\", Roboto,\r\n"
			+ "          \"Helvetica Neue\", Arial, \"Noto Sans\", \"Liberation Sans\", sans-serif,\r\n"
			+ "          \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\",\r\n"
			+ "          \"Noto Color Emoji\";\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      :root[data-dark-mode=\"true\"] {\r\n"
			+ "        background: #192232;\r\n"
			+ "        color: white;\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      :root,\r\n"
			+ "      body {\r\n"
			+ "        height: 100%;\r\n"
			+ "        width: 100%;\r\n"
			+ "        margin: 0;\r\n"
			+ "        box-sizing: border-box;\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      body {\r\n"
			+ "        display: grid;\r\n"
			+ "        grid-auto-rows: minmax(0, 1fr);\r\n"
			+ "        grid-auto-columns: minmax(0, 1fr);\r\n"
			+ "        padding: 1rem;\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      [data-ag-charts] {\r\n"
			+ "        overflow: hidden;\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      /* Center charts with explicit width and heights */\r\n"
			+ "      .ag-chart-wrapper {\r\n"
			+ "        display: flex !important;\r\n"
			+ "        align-items: center !important;\r\n"
			+ "        justify-content: center !important;\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      button:not(\r\n"
			+ "          #myGrid button,\r\n"
			+ "          #myChart button,\r\n"
			+ "          button[class*=\"ag-\"],\r\n"
			+ "          .ag-chart-context-menu button\r\n"
			+ "        ) {\r\n"
			+ "        --background-color: transparent;\r\n"
			+ "        --text-color: #212529;\r\n"
			+ "        --color-border-primary: #d0d5dd;\r\n"
			+ "        --hover-background-color: rgba(0, 0, 0, 0.1);\r\n"
			+ "\r\n"
			+ "        appearance: none;\r\n"
			+ "        border: 1px solid var(--color-border-primary);\r\n"
			+ "        border-radius: 6px;\r\n"
			+ "        height: 36px;\r\n"
			+ "        color: var(--text-color);\r\n"
			+ "        background-color: var(--background-color);\r\n"
			+ "        cursor: pointer;\r\n"
			+ "        display: inline-block;\r\n"
			+ "        font-size: 14px;\r\n"
			+ "        font-weight: 500;\r\n"
			+ "        letter-spacing: 0.01em;\r\n"
			+ "        padding: 0.375em 1em 0.5em;\r\n"
			+ "        white-space: nowrap;\r\n"
			+ "        margin-right: 6px;\r\n"
			+ "        margin-bottom: 8px;\r\n"
			+ "        transition: background-color 0.25s ease-in-out;\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      button:not(\r\n"
			+ "          #myGrid button,\r\n"
			+ "          #myChart button,\r\n"
			+ "          button[class*=\"ag-\"],\r\n"
			+ "          .ag-chart-context-menu button\r\n"
			+ "        ):hover {\r\n"
			+ "        background-color: var(--hover-background-color);\r\n"
			+ "      }\r\n"
			+ "\r\n"
			+ "      :root[data-dark-mode=\"true\"]\r\n"
			+ "        button:not(\r\n"
			+ "          #myGrid button,\r\n"
			+ "          #myChart button,\r\n"
			+ "          button[class*=\"ag-\"],\r\n"
			+ "          .ag-chart-context-menu button\r\n"
			+ "        ) {\r\n"
			+ "        --text-color: #f8f9fa;\r\n"
			+ "        --color-border-primary: rgba(255, 255, 255, 0.2);\r\n"
			+ "        --hover-background-color: #2a343e;\r\n"
			+ "      }\r\n"
			+ "    </style>\r\n"
			+ "    <style>\r\n"
			+ "      ._icon_1tqo9_1 {\r\n"
			+ "        fill: var(--color-icon);\r\n"
			+ "        width: var(--icon-size);\r\n"
			+ "        height: var(--icon-size);\r\n"
			+ "      }\r\n"
			+ "      ._cta_x2rta_1 {\r\n"
			+ "        position: relative;\r\n"
			+ "        display: flex;\r\n"
			+ "        justify-content: center;\r\n"
			+ "        align-items: center;\r\n"
			+ "        width: 40px;\r\n"
			+ "        height: 40px;\r\n"
			+ "        border-radius: var(--radius-sm);\r\n"
			+ "        transition:\r\n"
			+ "          color 0.25s ease-in-out,\r\n"
			+ "          background-color 0.25s ease-in-out;\r\n"
			+ "        cursor: pointer;\r\n"
			+ "      }\r\n"
			+ "      ._cta_x2rta_1:hover {\r\n"
			+ "        background-color: var(--color-util-brand-100);\r\n"
			+ "      }\r\n"
			+ "      ._cta_x2rta_1 svg {\r\n"
			+ "        --icon-size: 1.25em;\r\n"
			+ "        fill: var(--color-link);\r\n"
			+ "        transform: translate(1px, 0.75px);\r\n"
			+ "        transition: fill 0.25s ease-in-out;\r\n"
			+ "      }\r\n"
			+ "      li:first-child ._cta_x2rta_1 svg {\r\n"
			+ "        --icon-size: 1.35em;\r\n"
			+ "      }\r\n"
			+ "      [data-dark-mode=\"true\"] ._cta_x2rta_1:hover {\r\n"
			+ "        background-color: var(--color-util-brand-50);\r\n"
			+ "      }\r\n"
			+ "      ._tooltip_x2rta_28 {\r\n"
			+ "        --tooltip-background: var(--color-fg-primary);\r\n"
			+ "        position: absolute;\r\n"
			+ "        display: block;\r\n"
			+ "        color: var(--color-bg-primary);\r\n"
			+ "        top: -44px;\r\n"
			+ "        padding: 4px 16px;\r\n"
			+ "        white-space: nowrap;\r\n"
			+ "        font-weight: 600;\r\n"
			+ "        background-color: var(--tooltip-background);\r\n"
			+ "        border-radius: 6px;\r\n"
			+ "        transform: translateY(4px);\r\n"
			+ "        opacity: 0;\r\n"
			+ "        pointer-events: none;\r\n"
			+ "        transition-delay: 0;\r\n"
			+ "        transition:\r\n"
			+ "          opacity 0.165s ease-in,\r\n"
			+ "          transform 0.165s ease-in;\r\n"
			+ "        z-index: 1;\r\n"
			+ "      }\r\n"
			+ "      ._tooltip_x2rta_28:before {\r\n"
			+ "        content: \"\";\r\n"
			+ "        position: absolute;\r\n"
			+ "        background-color: var(--tooltip-background);\r\n"
			+ "        width: 16px;\r\n"
			+ "        height: 16px;\r\n"
			+ "        transform: rotate(45deg);\r\n"
			+ "        bottom: -7px;\r\n"
			+ "        left: calc(50% - 8px);\r\n"
			+ "        border-radius: 3px;\r\n"
			+ "        z-index: -1;\r\n"
			+ "      }\r\n"
			+ "      ._cta_x2rta_1:hover ._tooltip_x2rta_28 {\r\n"
			+ "        opacity: 1;\r\n"
			+ "        transform: translateY(0);\r\n"
			+ "        transition:\r\n"
			+ "          opacity 0.33s ease-in,\r\n"
			+ "          transform 0.33s ease-in;\r\n"
			+ "        transition-delay: 0.165s;\r\n"
			+ "      }\r\n"
			+ "      [data-dark-mode=\"true\"] ._tooltip_x2rta_28 {\r\n"
			+ "        --tooltip-background: var(--color-bg-secondary);\r\n"
			+ "        color: var(--color-fg-primary);\r\n"
			+ "        box-shadow: 0 -4px 16px #0006;\r\n"
			+ "      }\r\n"
			+ "    </style>\r\n"
			+ "  </head>\r\n"
			+ "  <body>\r\n"
			+ "    <div id=\"myChart\"></div>\r\n"
			+ "    <script>\r\n"
			+ "      (function () {\r\n"
			+ "        const appLocation = \"/gallery/examples/line-with-time-axis\";\r\n"
			+ "\r\n"
			+ "        window.__basePath = appLocation;\r\n"
			+ "      })();\r\n"
			+ "    </script>\r\n"
			+ "    <script src=\"https://cdn.jsdelivr.net/npm/ag-charts-enterprise@9.3.1/dist/umd/ag-charts-enterprise.js?t=1714485021633\"></script>\r\n"
			+ "    <script src=\"./data.js\"></script>\r\n"
			+ "    <script src=\"./main.js\"></script>\r\n"
			+ "    <link\r\n"
			+ "      rel=\"stylesheet\"\r\n"
			+ "      href=\"./styles.css\"\r\n"
			+ "    />\r\n"
			+ "  </body>\r\n"
			+ "</html>";
	}
	public void curveTbuild(String path,List<Stock> ls)
	{
		JavaUtils.saveAs(path+"data.js", curveToDataJs(ls));
		JavaUtils.saveAs(path+"main.js", curveToGraphJs(ls));
		JavaUtils.saveAs(path+"index.html", curveToPageHtml());
		JavaUtils.saveAs(path+"styles.css", curveToStylesCss());
		
	}
	public void curveTbuild(String path,Stock s)
	{
		JavaUtils.saveAs(path+"data.js", curveToDataJs(s));
		JavaUtils.saveAs(path+"main.js", curveToGraphJs(s));
		JavaUtils.saveAs(path+"index.html", curveToPageHtml());
		JavaUtils.saveAs(path+"styles.css", curveToStylesCss());
		
	}
	public void curveTbuild(String path)
	{
		JavaUtils.saveAs(path+"data.js", curveToDataJs());
		JavaUtils.saveAs(path+"main.js", curveToGraphJs());
		JavaUtils.saveAs(path+"index.html", curveToPageHtml());
		JavaUtils.saveAs(path+"styles.css", curveToStylesCss());
		
	}
	public void build(String path,List<Stock> ls)
	{
		JavaUtils.saveAs(path+"data.js", ToDataJs(ls));
		JavaUtils.saveAs(path+"main.js", ToGraphJs(ls));
		JavaUtils.saveAs(path+"index.html", ToPageHtml());
		
	}
	public void build(String path)
	{
		JavaUtils.saveAs(path+"data.js", ToDataJs());
		JavaUtils.saveAs(path+"main.js", ToGraphJs());
		JavaUtils.saveAs(path+"index.html", ToPageHtml());
		
	}
	public static void main(String[] args) {
		BuildApage b=new BuildApage();
		Stock s=new Stock(new File("C:\\Temp\\crypto\\BTC-EUR.csv"));
		Stock s1=new Stock(new File("C:\\Temp\\crypto\\ETH-EUR.csv"));
		Stock s2=new Stock(new File("C:\\Temp\\crypto\\BNB-EUR.csv"));
		Stock s3=new Stock(new File("C:\\Temp\\crypto\\SOL-EUR.csv"));
		Stock s4=new Stock(new File("C:\\Temp\\crypto\\XRP-EUR.csv"));
		Stock s5=new Stock(new File("C:\\Temp\\crypto\\DOGE-EUR.csv"));
		List<Stock> ls=new ArrayList<Stock>();
		ls.add(s);
		ls.add(s1);
		ls.add(s2);
		ls.add(s3);
		ls.add(s4);
		ls.add(s5);
		
	//	b.curveTbuild("C:\\Temp\\crypto\\html\\",ls);
		b.build("C:\\Temp\\crypto\\html\\",ls);
		

	}

}
